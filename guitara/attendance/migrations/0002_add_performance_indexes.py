# Generated by Django 4.2.x on 2025-06-19 12:02

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("attendance", "0001_initial"),
    ]

    operations = [
        # AttendanceRecord Model Performance Indexes
        migrations.RunSQL(
            sql=[
                # Staff member attendance lookups
                "CREATE INDEX idx_attendance_staff_date ON attendance_attendancerecord(staff_member_id, date);",
                "CREATE INDEX idx_attendance_staff_status_date ON attendance_attendancerecord(staff_member_id, status, date);",
                # Status-based queries
                "CREATE INDEX idx_attendance_status_date ON attendance_attendancerecord(status, date);",
                "CREATE INDEX idx_attendance_pending_approval ON attendance_attendancerecord(status, date) WHERE status = 'pending_approval';",
                "CREATE INDEX idx_attendance_present_late ON attendance_attendancerecord(status, date) WHERE status IN ('present', 'late');",
                # Check-in/check-out time queries
                "CREATE INDEX idx_attendance_checkin_time ON attendance_attendancerecord(date, check_in_time, is_checked_in);",
                "CREATE INDEX idx_attendance_checkout_time ON attendance_attendancerecord(date, check_out_time) WHERE check_out_time IS NOT NULL;",
                # Approval workflow
                "CREATE INDEX idx_attendance_approved_by_date ON attendance_attendancerecord(approved_by_id, approved_at, date) WHERE approved_by_id IS NOT NULL;",
                # Hours worked calculations
                "CREATE INDEX idx_attendance_hours_worked ON attendance_attendancerecord(date, hours_worked) WHERE hours_worked IS NOT NULL;",
                # Date range queries for reporting
                "CREATE INDEX idx_attendance_date_created ON attendance_attendancerecord(date, created_at);",
                "CREATE INDEX idx_attendance_updated_at ON attendance_attendancerecord(updated_at, date);",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS idx_attendance_staff_date;",
                "DROP INDEX IF EXISTS idx_attendance_staff_status_date;",
                "DROP INDEX IF EXISTS idx_attendance_status_date;",
                "DROP INDEX IF EXISTS idx_attendance_pending_approval;",
                "DROP INDEX IF EXISTS idx_attendance_present_late;",
                "DROP INDEX IF EXISTS idx_attendance_checkin_time;",
                "DROP INDEX IF EXISTS idx_attendance_checkout_time;",
                "DROP INDEX IF EXISTS idx_attendance_approved_by_date;",
                "DROP INDEX IF EXISTS idx_attendance_hours_worked;",
                "DROP INDEX IF EXISTS idx_attendance_date_created;",
                "DROP INDEX IF EXISTS idx_attendance_updated_at;",
            ],
        ),
        # AttendanceSummary Model Performance Indexes
        migrations.RunSQL(
            sql=[
                # Summary date queries
                "CREATE INDEX idx_attendance_summary_date ON attendance_attendancesummary(date);",
                # Summary statistics queries
                "CREATE INDEX idx_attendance_summary_counts ON attendance_attendancesummary(date, total_staff, present_count);",
                "CREATE INDEX idx_attendance_summary_updated ON attendance_attendancesummary(updated_at, date);",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS idx_attendance_summary_date;",
                "DROP INDEX IF EXISTS idx_attendance_summary_counts;",
                "DROP INDEX IF EXISTS idx_attendance_summary_updated;",
            ],
        ),
    ]
