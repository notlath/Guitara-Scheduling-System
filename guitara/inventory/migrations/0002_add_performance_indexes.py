# Generated by Django 4.2.x on 2025-06-19 12:04

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("inventory", "0001_initial"),
    ]

    operations = [
        # InventoryItem Model Performance Indexes
        migrations.RunSQL(
            sql=[
                # Inventory search and filtering
                "CREATE INDEX idx_inventory_name_category ON inventory_inventoryitem(name, category);",
                "CREATE INDEX idx_inventory_category_stock ON inventory_inventoryitem(category, current_stock);",
                # Stock level monitoring
                "CREATE INDEX idx_inventory_low_stock ON inventory_inventoryitem(current_stock, min_stock) WHERE current_stock <= min_stock;",
                "CREATE INDEX idx_inventory_stock_levels ON inventory_inventoryitem(current_stock, min_stock, category);",
                # Supplier queries
                "CREATE INDEX idx_inventory_supplier ON inventory_inventoryitem(supplier, category);",
                # Expiry date monitoring
                "CREATE INDEX idx_inventory_expiry_date ON inventory_inventoryitem(expiry_date, category) WHERE expiry_date IS NOT NULL;",
                "CREATE INDEX idx_inventory_expired_items ON inventory_inventoryitem(expiry_date) WHERE expiry_date < CURRENT_DATE;",
                "CREATE INDEX idx_inventory_expiring_soon ON inventory_inventoryitem(expiry_date) WHERE expiry_date <= (CURRENT_DATE + INTERVAL '30 days');",
                # Restock tracking
                "CREATE INDEX idx_inventory_last_restocked ON inventory_inventoryitem(last_restocked, category) WHERE last_restocked IS NOT NULL;",
                # Cost analysis
                "CREATE INDEX idx_inventory_cost_category ON inventory_inventoryitem(category, cost_per_unit);",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS idx_inventory_name_category;",
                "DROP INDEX IF EXISTS idx_inventory_category_stock;",
                "DROP INDEX IF EXISTS idx_inventory_low_stock;",
                "DROP INDEX IF EXISTS idx_inventory_stock_levels;",
                "DROP INDEX IF EXISTS idx_inventory_supplier;",
                "DROP INDEX IF EXISTS idx_inventory_expiry_date;",
                "DROP INDEX IF EXISTS idx_inventory_expired_items;",
                "DROP INDEX IF EXISTS idx_inventory_expiring_soon;",
                "DROP INDEX IF EXISTS idx_inventory_last_restocked;",
                "DROP INDEX IF EXISTS idx_inventory_cost_category;",
            ],
        ),
        # UsageLog Model Performance Indexes
        migrations.RunSQL(
            sql=[
                # Usage tracking by item
                "CREATE INDEX idx_usage_log_item_timestamp ON inventory_usagelog(item_id, timestamp);",
                "CREATE INDEX idx_usage_log_item_action ON inventory_usagelog(item_id, action_type, timestamp);",
                # Operator activity tracking
                "CREATE INDEX idx_usage_log_operator_timestamp ON inventory_usagelog(operator_id, timestamp) WHERE operator_id IS NOT NULL;",
                "CREATE INDEX idx_usage_log_operator_action ON inventory_usagelog(operator_id, action_type, timestamp) WHERE operator_id IS NOT NULL;",
                # Action type queries
                "CREATE INDEX idx_usage_log_action_timestamp ON inventory_usagelog(action_type, timestamp);",
                "CREATE INDEX idx_usage_log_restock ON inventory_usagelog(action_type, timestamp, quantity_used) WHERE action_type = 'restock';",
                "CREATE INDEX idx_usage_log_usage ON inventory_usagelog(action_type, timestamp, quantity_used) WHERE action_type = 'usage';",
                # Time-based reporting
                "CREATE INDEX idx_usage_log_date ON inventory_usagelog(timestamp);",
                "CREATE INDEX idx_usage_log_recent ON inventory_usagelog(timestamp) WHERE timestamp >= (NOW() - INTERVAL '30 days');",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS idx_usage_log_item_timestamp;",
                "DROP INDEX IF EXISTS idx_usage_log_item_action;",
                "DROP INDEX IF EXISTS idx_usage_log_operator_timestamp;",
                "DROP INDEX IF EXISTS idx_usage_log_operator_action;",
                "DROP INDEX IF EXISTS idx_usage_log_action_timestamp;",
                "DROP INDEX IF EXISTS idx_usage_log_restock;",
                "DROP INDEX IF EXISTS idx_usage_log_usage;",
                "DROP INDEX IF EXISTS idx_usage_log_date;",
                "DROP INDEX IF EXISTS idx_usage_log_recent;",
            ],
        ),
    ]
